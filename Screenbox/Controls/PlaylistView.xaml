<UserControl
    x:Class="Screenbox.Controls.PlaylistView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:local="using:Screenbox.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:strings="using:Screenbox.Strings"
    xmlns:viewModels="using:Screenbox.ViewModels"
    x:Name="Control"
    d:DesignHeight="300"
    d:DesignWidth="400"
    Loaded="PlaylistView_OnLoaded"
    mc:Ignorable="d">

    <Grid>
        <Grid.Resources>
            <ThemeShadow x:Name="SharedShadow" />
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <StackPanel
            x:Name="ActionButtonRow"
            Grid.Row="0"
            Height="48"
            HorizontalAlignment="Left"
            Orientation="Horizontal">
            <Button
                Margin="0,0,12,0"
                VerticalAlignment="Center"
                Command="{x:Bind ViewModel.ClearCommand}"
                IsEnabled="{x:Bind ViewModel.HasItems, Mode=OneWay}">
                <StackPanel Orientation="Horizontal" Spacing="8">
                    <FontIcon Glyph="&#xe74d;" />
                    <TextBlock Text="Clear" />
                </StackPanel>
            </Button>

            <ToggleButton
                x:Name="MultiSelectToggle"
                VerticalAlignment="Center"
                IsEnabled="{x:Bind ViewModel.HasItems, Mode=OneWay}">
                <StackPanel Orientation="Horizontal" Spacing="8">
                    <FontIcon Glyph="&#xe762;" />
                    <TextBlock Text="Multi-select" />
                </StackPanel>
            </ToggleButton>
        </StackPanel>

        <Border
            x:Name="SelectionCommandRow"
            Grid.Row="1"
            Background="{StaticResource AcrylicInAppFillColorDefaultBrush}"
            BorderBrush="{StaticResource CardStrokeColorDefaultSolidBrush}"
            BorderThickness="1"
            CornerRadius="8"
            Shadow="{StaticResource SharedShadow}"
            Translation="0,0,32"
            Visibility="Collapsed">
            <CommandBar
                VerticalContentAlignment="Center"
                DefaultLabelPosition="Right"
                IsDynamicOverflowEnabled="False"
                SizeChanged="CommandBar_OnSizeChanged">
                <AppBarButton
                    x:Name="PlayNextButton"
                    Command="{x:Bind ViewModel.PlayNextCommand}"
                    CommandParameter="{x:Bind PlaylistListView.SelectedItems}"
                    Label="{x:Bind strings:Resources.PlayNext}">
                    <AppBarButton.Icon>
                        <FontIcon Glyph="&#xf8ad;" />
                    </AppBarButton.Icon>
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Click">
                            <core:ChangePropertyAction
                                PropertyName="SelectedItem"
                                TargetObject="{x:Bind PlaylistListView}"
                                Value="{x:Null}" />
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </AppBarButton>
                <AppBarButton
                    x:Name="RemoveSelectedButton"
                    Command="{x:Bind ViewModel.RemoveSelectedCommand}"
                    CommandParameter="{x:Bind PlaylistListView.SelectedItems}"
                    Icon="Delete"
                    Label="{x:Bind strings:Resources.Remove}">
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator Key="Delete" />
                    </AppBarButton.KeyboardAccelerators>
                </AppBarButton>
                <AppBarButton
                    x:Name="MoveUpButton"
                    Command="{x:Bind ViewModel.MoveSelectedItemUpCommand}"
                    CommandParameter="{x:Bind PlaylistListView.SelectedItems}"
                    Label="{x:Bind strings:Resources.MoveUp}"
                    Visibility="Collapsed">
                    <AppBarButton.Icon>
                        <FontIcon Glyph="&#xe74a;" />
                    </AppBarButton.Icon>
                </AppBarButton>
                <AppBarButton
                    x:Name="MoveDownButton"
                    Command="{x:Bind ViewModel.MoveSelectedItemDownCommand}"
                    CommandParameter="{x:Bind PlaylistListView.SelectedItems}"
                    Label="{x:Bind strings:Resources.MoveDown}"
                    Visibility="Collapsed">
                    <AppBarButton.Icon>
                        <FontIcon Glyph="&#xe74b;" />
                    </AppBarButton.Icon>
                </AppBarButton>
                <AppBarButton
                    Width="40"
                    Click="ClearSelection_OnClick"
                    Icon="Clear"
                    Label="{x:Bind strings:Resources.ClearSelection}"
                    LabelPosition="Collapsed" />
                <CommandBar.Content>
                    <StackPanel Margin="8,0" Orientation="Horizontal">
                        <CheckBox
                            x:Name="SelectionCheckBox"
                            VerticalAlignment="Center"
                            Click="SelectionCheckBox_OnClick"
                            Content="{x:Bind strings:Resources.ItemsSelected(ViewModel.SelectionCount), Mode=OneWay}" />
                    </StackPanel>
                </CommandBar.Content>
            </CommandBar>
        </Border>

        <ListView
            x:Name="PlaylistListView"
            Grid.Row="2"
            Margin="0,8,0,0"
            AllowDrop="True"
            CanDragItems="True"
            CanReorderItems="True"
            ContainerContentChanging="PlaylistListView_OnContainerContentChanging"
            DragOver="{x:Bind ViewModel.OnDragOver}"
            Drop="{x:Bind ViewModel.OnDrop}"
            ItemsSource="{x:Bind ViewModel.Playlist}"
            SelectionChanged="PlaylistListView_OnSelectionChanged"
            SelectionMode="Extended">
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="viewModels:MediaViewModel">
                    <UserControl>
                        <Grid Padding="0,6">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="32" />
                                <ColumnDefinition Width="32" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <FontIcon
                                x:Name="IsPlayingIcon"
                                Grid.Column="0"
                                FontFamily="ms-appx:///Assets/Screenbox-Custom-Icons.ttf#Screenbox-Custom-Icons"
                                FontSize="16"
                                Glyph="A"
                                ToolTipService.ToolTip="{x:Bind strings:Resources.IsPlaying}"
                                Visibility="Collapsed" />

                            <FontIcon
                                x:Name="ItemIcon"
                                Grid.Column="1"
                                Margin="8"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                FontFamily="{StaticResource SymbolThemeFontFamily}"
                                FontSize="16"
                                Glyph="{x:Bind Glyph}" />

                            <Button
                                x:Name="PlayButton"
                                Grid.Column="1"
                                Padding="8"
                                Background="Transparent"
                                BorderThickness="0"
                                Command="{Binding ElementName=Control, Path=DataContext.PlaySingleCommand}"
                                CommandParameter="{x:Bind}"
                                Visibility="Collapsed">
                                <FontIcon
                                    FontFamily="{StaticResource SymbolThemeFontFamily}"
                                    FontSize="16"
                                    Foreground="{ThemeResource AccentFillColorDefaultBrush}"
                                    Glyph="&#xE768;" />
                            </Button>

                            <TextBlock
                                x:Name="TitleText"
                                Grid.Column="2"
                                Margin="12,0,0,0"
                                VerticalAlignment="Center"
                                Text="{x:Bind Name}" />

                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="PlayingState">
                                    <VisualState x:Name="NotPlaying" />
                                    <VisualState x:Name="IsPlaying">
                                        <VisualState.StateTriggers>
                                            <StateTrigger IsActive="{Binding IsPlaying}" />
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                            <Setter Target="ItemIcon.Foreground" Value="{ThemeResource AccentFillColorDefaultBrush}" />
                                            <Setter Target="TitleText.Foreground" Value="{ThemeResource AccentFillColorDefaultBrush}" />
                                            <Setter Target="IsPlayingIcon.Visibility" Value="Visible" />
                                            <Setter Target="IsPlayingIcon.Foreground" Value="{ThemeResource AccentFillColorDefaultBrush}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>

                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="ItemIcon.Visibility" Value="Collapsed" />
                                            <Setter Target="PlayButton.Visibility" Value="Visible" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </UserControl>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <interactivity:Interaction.Behaviors>
            <core:DataTriggerBehavior Binding="{x:Bind MultiSelectToggle.IsChecked, Mode=OneWay}" Value="True">
                <core:GoToStateAction StateName="Multiple" TargetObject="{x:Bind}" />
            </core:DataTriggerBehavior>
            <core:DataTriggerBehavior Binding="{x:Bind MultiSelectToggle.IsChecked, Mode=OneWay}" Value="False">
                <core:GoToStateAction StateName="Extended" TargetObject="{x:Bind}" />
            </core:DataTriggerBehavior>
        </interactivity:Interaction.Behaviors>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="SelectionModes">
                <VisualState x:Name="Extended" />
                <VisualState x:Name="Multiple">
                    <VisualState.Setters>
                        <Setter Target="SelectionCommandRow.Visibility" Value="Visible" />
                        <Setter Target="ActionButtonRow.Visibility" Value="Collapsed" />
                        <Setter Target="PlaylistListView.SelectionMode" Value="Multiple" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="MultipleSingleSelected">
                    <VisualState.Setters>
                        <Setter Target="SelectionCommandRow.Visibility" Value="Visible" />
                        <Setter Target="ActionButtonRow.Visibility" Value="Collapsed" />
                        <Setter Target="PlaylistListView.SelectionMode" Value="Multiple" />
                        <Setter Target="MoveUpButton.Visibility" Value="Visible" />
                        <Setter Target="MoveDownButton.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="LayoutGroup">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Compact">
                    <VisualState.Setters>
                        <Setter Target="MoveUpButton.Width" Value="40" />
                        <Setter Target="MoveUpButton.LabelPosition" Value="Collapsed" />
                        <Setter Target="MoveUpButton.(ToolTipService.ToolTip)" Value="{x:Bind strings:Resources.MoveUp}" />
                        <Setter Target="MoveDownButton.Width" Value="40" />
                        <Setter Target="MoveDownButton.LabelPosition" Value="Collapsed" />
                        <Setter Target="MoveDownButton.(ToolTipService.ToolTip)" Value="{x:Bind strings:Resources.MoveDown}" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Minimal">
                    <VisualState.Setters>
                        <Setter Target="MoveUpButton.Width" Value="40" />
                        <Setter Target="MoveUpButton.LabelPosition" Value="Collapsed" />
                        <Setter Target="MoveUpButton.(ToolTipService.ToolTip)" Value="{x:Bind strings:Resources.MoveUp}" />
                        <Setter Target="MoveDownButton.Width" Value="40" />
                        <Setter Target="MoveDownButton.LabelPosition" Value="Collapsed" />
                        <Setter Target="MoveDownButton.(ToolTipService.ToolTip)" Value="{x:Bind strings:Resources.MoveDown}" />
                        <Setter Target="RemoveSelectedButton.Width" Value="40" />
                        <Setter Target="RemoveSelectedButton.LabelPosition" Value="Collapsed" />
                        <Setter Target="RemoveSelectedButton.(ToolTipService.ToolTip)" Value="{x:Bind strings:Resources.Remove}" />
                        <Setter Target="PlayNextButton.Width" Value="40" />
                        <Setter Target="PlayNextButton.LabelPosition" Value="Collapsed" />
                        <Setter Target="PlayNextButton.(ToolTipService.ToolTip)" Value="{x:Bind strings:Resources.PlayNext}" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</UserControl>
