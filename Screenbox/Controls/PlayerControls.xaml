<UserControl
    x:Class="Screenbox.Controls.PlayerControls"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="using:Screenbox.Converters"
    xmlns:converters1="using:Microsoft.Toolkit.Uwp.UI.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:Screenbox.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:strings="using:Screenbox.Strings"
    xmlns:ui="using:Microsoft.Toolkit.Uwp.UI"
    d:DesignHeight="300"
    d:DesignWidth="400"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <converters:ToggleButtonCheckToRepeatModeConverter x:Key="ToggleButtonCheckToRepeatModeConverter" />
            <converters1:BoolToObjectConverter
                x:Key="BoolToPlayPauseTextConverter"
                FalseValue="{strings:Resources Key=Play}"
                TrueValue="{strings:Resources Key=Pause}" />

            <StaticResource x:Key="ToggleButtonForegroundChecked" ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="ToggleButtonForegroundCheckedPointerOver" ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="ToggleButtonForegroundCheckedPressed" ResourceKey="TextFillColorSecondaryBrush" />
            <StaticResource x:Key="ToggleButtonForegroundCheckedDisabled" ResourceKey="TextFillColorDisabledBrush" />
            <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="Transparent" />
            <StaticResource x:Key="ToggleButtonBackgroundCheckedPointerOver" ResourceKey="ControlFillColorSecondaryBrush" />
            <StaticResource x:Key="ToggleButtonBackgroundCheckedPressed" ResourceKey="ControlFillColorTertiaryBrush" />
            <StaticResource x:Key="ToggleButtonBackgroundCheckedDisabled" ResourceKey="ControlFillColorDisabledBrush" />
            <SolidColorBrush x:Key="ButtonBackgroundDisabled" Color="Transparent" />

            <Style
                x:Key="PlayerButtonStyle"
                BasedOn="{StaticResource DefaultButtonStyle}"
                TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Height" Value="40" />
                <Setter Property="Width" Value="42" />
                <Setter Property="Margin" Value="2,0" />
            </Style>

            <Style
                x:Key="SmallPlayerButtonStyle"
                BasedOn="{StaticResource PlayerButtonStyle}"
                TargetType="Button">
                <Setter Property="Height" Value="36" />
                <Setter Property="Width" Value="36" />
                <Setter Property="Padding" Value="10,5" />
            </Style>

            <Style
                x:Key="PlayerToggleButtonStyle"
                BasedOn="{StaticResource DefaultToggleButtonStyle}"
                TargetType="ToggleButton">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Height" Value="40" />
                <Setter Property="Width" Value="42" />
                <Setter Property="Margin" Value="2,0" />
            </Style>

            <Style
                x:Key="SmallPlayerToggleButtonStyle"
                BasedOn="{StaticResource PlayerToggleButtonStyle}"
                TargetType="ToggleButton">
                <Setter Property="Height" Value="36" />
                <Setter Property="Width" Value="36" />
                <Setter Property="Padding" Value="10,5" />
            </Style>

            <Flyout x:Key="VolumeControlFlyout">
                <local:VolumeControl x:Name="VolumeControl" />
            </Flyout>

            <Flyout x:Key="CustomPlaybackSpeedFlyout" ShouldConstrainToRootBounds="True">
                <Grid MinWidth="180">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" HorizontalAlignment="Center"><Run Text="{Binding ElementName=SpeedSlider, Path=Value, FallbackValue=1}" /> <Run Text="×" /></TextBlock>
                    <Slider
                        x:Name="SpeedSlider"
                        Grid.Row="1"
                        Margin="0,8,0,0"
                        IsThumbToolTipEnabled="False"
                        Maximum="2"
                        Minimum="0.05"
                        StepFrequency="0.05"
                        ValueChanged="SpeedSlider_OnValueChanged"
                        Value="1.0" />
                </Grid>
            </Flyout>

            <MenuFlyout x:Name="NormalVideoContextMenu">
                <MenuFlyoutItem
                    Command="{x:Bind ViewModel.ShowPropertiesCommand}"
                    Icon="{ui:FontIcon FontFamily={StaticResource SymbolThemeFontFamily},
                                       Glyph=&#xE946;}"
                    Text="{x:Bind strings:Resources.Properties}" />
                <MenuFlyoutSubItem
                    x:Name="PlaybackSpeedSubMenu"
                    Icon="{ui:FontIcon FontFamily={StaticResource SymbolThemeFontFamily},
                                       Glyph=&#xEC57;}"
                    Text="{x:Bind strings:Resources.PlaybackSpeed}">
                    <muxc:RadioMenuFlyoutItem
                        x:Name="PlaybackSpeed025MenuItem"
                        Command="{x:Bind ViewModel.SetPlaybackSpeedCommand}"
                        CommandParameter="{x:Bind PlaybackSpeed025MenuItem.Tag}"
                        GroupName="SpeedGroup"
                        Tag="0.25"
                        Text="0.25 ×" />
                    <muxc:RadioMenuFlyoutItem
                        x:Name="PlaybackSpeed05MenuItem"
                        Command="{x:Bind ViewModel.SetPlaybackSpeedCommand}"
                        CommandParameter="{x:Bind PlaybackSpeed05MenuItem.Tag}"
                        GroupName="SpeedGroup"
                        Tag="0.5"
                        Text="0.5 ×" />
                    <muxc:RadioMenuFlyoutItem
                        x:Name="PlaybackSpeed075MenuItem"
                        Command="{x:Bind ViewModel.SetPlaybackSpeedCommand}"
                        CommandParameter="{x:Bind PlaybackSpeed075MenuItem.Tag}"
                        GroupName="SpeedGroup"
                        Tag="0.75"
                        Text="0.75 ×" />
                    <muxc:RadioMenuFlyoutItem
                        x:Name="PlaybackSpeed1MenuItem"
                        Command="{x:Bind ViewModel.SetPlaybackSpeedCommand}"
                        CommandParameter="{x:Bind PlaybackSpeed1MenuItem.Tag}"
                        GroupName="SpeedGroup"
                        IsChecked="True"
                        Tag="1"
                        Text="1 ×" />
                    <muxc:RadioMenuFlyoutItem
                        x:Name="PlaybackSpeed125MenuItem"
                        Command="{x:Bind ViewModel.SetPlaybackSpeedCommand}"
                        CommandParameter="{x:Bind PlaybackSpeed125MenuItem.Tag}"
                        GroupName="SpeedGroup"
                        Tag="1.25"
                        Text="1.25 ×" />
                    <muxc:RadioMenuFlyoutItem
                        x:Name="PlaybackSpeed15MenuItem"
                        Command="{x:Bind ViewModel.SetPlaybackSpeedCommand}"
                        CommandParameter="{x:Bind PlaybackSpeed15MenuItem.Tag}"
                        GroupName="SpeedGroup"
                        Tag="1.5"
                        Text="1.5 ×" />
                    <muxc:RadioMenuFlyoutItem
                        x:Name="PlaybackSpeed175MenuItem"
                        Command="{x:Bind ViewModel.SetPlaybackSpeedCommand}"
                        CommandParameter="{x:Bind PlaybackSpeed175MenuItem.Tag}"
                        GroupName="SpeedGroup"
                        Tag="1.75"
                        Text="1.75 ×" />
                    <muxc:RadioMenuFlyoutItem
                        x:Name="PlaybackSpeed2MenuItem"
                        Command="{x:Bind ViewModel.SetPlaybackSpeedCommand}"
                        CommandParameter="{x:Bind PlaybackSpeed2MenuItem.Tag}"
                        GroupName="SpeedGroup"
                        Tag="2"
                        Text="2 ×" />
                    <MenuFlyoutSeparator />
                    <muxc:RadioMenuFlyoutItem
                        x:Name="CustomPlaybackSpeedMenuItem"
                        Click="CustomSpeedMenuItem_OnClick"
                        GroupName="SpeedGroup"
                        Text="{x:Bind strings:Resources.CustomPlaybackSpeed}" />
                </MenuFlyoutSubItem>
                <MenuFlyoutItem
                    Command="{x:Bind ViewModel.SaveSnapshotCommand}"
                    Icon="{ui:FontIcon FontFamily={StaticResource SymbolThemeFontFamily},
                                       Glyph=&#xEE71;}"
                    Text="{x:Bind strings:Resources.SaveCurrentFrame}" />
                <ToggleMenuFlyoutItem
                    Command="{x:Bind ViewModel.ToggleCompactLayoutCommand}"
                    Icon="{ui:FontIcon FontFamily={StaticResource SymbolThemeFontFamily},
                                       Glyph=&#xEE49;}"
                    IsChecked="{x:Bind ViewModel.IsCompact, Mode=OneWay}"
                    Text="{x:Bind strings:Resources.PictureInPicture}" />
                <ToggleMenuFlyoutItem
                    Icon="{ui:FontIcon FontFamily={StaticResource SymbolThemeFontFamily},
                                       Glyph=&#xE9A6;}"
                    IsChecked="{x:Bind ViewModel.ZoomToFit, Mode=TwoWay}"
                    Text="{x:Bind strings:Resources.ZoomToFit}" />
                <MenuFlyoutItem
                    Click="CastMenuFlyoutItem_OnClick"
                    Icon="{ui:FontIcon FontFamily={StaticResource SymbolThemeFontFamily},
                                       Glyph=&#xEC15;}"
                    Text="Cast" />
            </MenuFlyout>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid
        Padding="{x:Bind Padding, Mode=OneWay}"
        Background="{x:Bind Background, Mode=OneWay}"
        BackgroundTransition="{x:Bind BackgroundTransition, Mode=OneWay}"
        XYFocusKeyboardNavigation="Enabled">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <local:SeekBar
            x:Name="SeekBar"
            Grid.Row="0"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Margin="12,0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Center"
            Background="Transparent"
            Foreground="Transparent" />

        <StackPanel
            Grid.Row="1"
            Grid.Column="0"
            Orientation="Horizontal">
            <Button
                x:Name="PlayPauseButton"
                Margin="0,0,2,0"
                local:AcceleratorService.ToolTip="{x:Bind ViewModel.IsPlaying, Converter={StaticResource BoolToPlayPauseTextConverter}, Mode=OneWay}"
                AccessKey="P"
                Command="{x:Bind ViewModel.PlayPauseCommand}"
                Style="{StaticResource PlayerButtonStyle}">
                <Button.KeyboardAccelerators>
                    <KeyboardAccelerator Key="P" />
                    <KeyboardAccelerator Key="K" />
                </Button.KeyboardAccelerators>
                <FontIcon Glyph="{x:Bind ViewModel.PlayPauseGlyph, Mode=OneWay}" />
            </Button>

            <Button
                x:Name="PreviousButton"
                Margin="2,0,0,0"
                local:AcceleratorService.ToolTip="{x:Bind strings:Resources.Previous}"
                Command="{x:Bind ViewModel.PlaylistViewModel.PreviousCommand}"
                CornerRadius="4,0,0,4"
                Style="{StaticResource PlayerButtonStyle}">
                <FontIcon Glyph="&#xE100;" />
                <Button.KeyboardAccelerators>
                    <KeyboardAccelerator Key="PageUp" />
                </Button.KeyboardAccelerators>
            </Button>
            <Button
                x:Name="NextButton"
                Margin="0,0,2,0"
                local:AcceleratorService.ToolTip="{x:Bind strings:Resources.Next}"
                Command="{x:Bind ViewModel.PlaylistViewModel.NextCommand}"
                CornerRadius="0,4,4,0"
                Style="{StaticResource PlayerButtonStyle}">
                <FontIcon Glyph="&#xE101;" />
                <Button.KeyboardAccelerators>
                    <KeyboardAccelerator Key="PageDown" />
                </Button.KeyboardAccelerators>
            </Button>

            <muxc:ToggleSplitButton
                x:Name="MuteButton"
                Height="40"
                Margin="2,0"
                local:AcceleratorService.ToolTip="{x:Bind strings:Resources.MuteToggle(VolumeControl.ViewModel.IsMute), Mode=OneWay}"
                AccessKey="M"
                Background="Transparent"
                BorderThickness="0"
                Flyout="{StaticResource VolumeControlFlyout}"
                IsChecked="{x:Bind VolumeControl.ViewModel.IsMute, Mode=TwoWay}">
                <muxc:SplitButton.KeyboardAccelerators>
                    <KeyboardAccelerator Key="M" />
                </muxc:SplitButton.KeyboardAccelerators>
                <FontIcon Glyph="{x:Bind VolumeControl.GetMuteToggleGlyph(VolumeControl.ViewModel.IsMute), Mode=OneWay}" />
            </muxc:ToggleSplitButton>

            <local:TimeDisplay
                x:Name="TimeDisplay"
                MinWidth="0"
                Margin="6,0,0,0"
                VerticalAlignment="Center"
                ChapterName="{x:Bind ViewModel.ChapterName, Mode=OneWay}"
                Length="{x:Bind SeekBar.ViewModel.Length, Mode=OneWay}"
                Time="{x:Bind SeekBar.ViewModel.Time, Mode=OneWay}"
                TitleName="{x:Bind ViewModel.TitleName, Mode=OneWay}" />
        </StackPanel>

        <StackPanel
            Grid.Row="1"
            Grid.Column="1"
            HorizontalAlignment="Right"
            Orientation="Horizontal">
            <ToggleButton
                x:Name="RepeatButton"
                local:AcceleratorService.ToolTip="{x:Bind strings:Resources.RepeatMode(ViewModel.PlaylistViewModel.RepeatMode), Mode=OneWay}"
                IsChecked="{x:Bind ViewModel.PlaylistViewModel.RepeatMode, Converter={StaticResource ToggleButtonCheckToRepeatModeConverter}, Mode=TwoWay}"
                IsThreeState="True"
                Style="{StaticResource PlayerToggleButtonStyle}">
                <FontIcon Glyph="{x:Bind ViewModel.PlaylistViewModel.RepeatModeGlyph, Mode=OneWay}" />
                <ToggleButton.KeyboardAccelerators>
                    <KeyboardAccelerator Key="R" Modifiers="Control" />
                </ToggleButton.KeyboardAccelerators>
            </ToggleButton>

            <Button
                x:Name="AudioAndCaptionButton"
                VerticalAlignment="Stretch"
                local:AcceleratorService.ToolTip="{x:Bind strings:Resources.AudioAndCaption}"
                AccessKey="C"
                Style="{StaticResource PlayerButtonStyle}">
                <FontIcon Glyph="&#xED1F;" />
                <Button.KeyboardAccelerators>
                    <KeyboardAccelerator Key="C" />
                </Button.KeyboardAccelerators>
                <Button.Flyout>
                    <Flyout Opening="{x:Bind AudioTrackSubtitlePicker.ViewModel.OnAudioCaptionFlyoutOpening}" ShouldConstrainToRootBounds="False">
                        <local:AudioTrackSubtitlePicker x:Name="AudioTrackSubtitlePicker" />
                    </Flyout>
                </Button.Flyout>
            </Button>

            <Button
                x:Name="FullscreenButton"
                local:AcceleratorService.ToolTip="{x:Bind strings:Resources.FullscreenToggle(ViewModel.IsFullscreen), Mode=OneWay}"
                AccessKey="F"
                Command="{x:Bind ViewModel.ToggleFullscreenCommand}"
                Style="{StaticResource PlayerButtonStyle}">
                <Button.KeyboardAccelerators>
                    <KeyboardAccelerator Key="F" />
                    <KeyboardAccelerator Key="Escape" IsEnabled="{x:Bind ViewModel.IsFullscreen, Mode=OneWay}" />
                </Button.KeyboardAccelerators>
                <FontIcon x:Name="FullscreenButtonIcon" Glyph="&#xE1D9;" />
            </Button>

            <Button
                x:Name="CompactVolumeButton"
                local:AcceleratorService.ToolTip="{x:Bind strings:Resources.Volume}"
                Flyout="{StaticResource VolumeControlFlyout}"
                Style="{StaticResource SmallPlayerButtonStyle}"
                Visibility="Collapsed">
                <Button.KeyboardAccelerators>
                    <KeyboardAccelerator Key="M" />
                </Button.KeyboardAccelerators>
                <FontIcon Glyph="{x:Bind VolumeControl.GetMuteToggleGlyph(VolumeControl.ViewModel.IsMute), Mode=OneWay}" />
            </Button>

            <Button
                x:Name="MoreButton"
                Margin="2,0,0,0"
                Flyout="{x:Bind VideoContextMenu, Mode=OneWay}"
                Style="{StaticResource PlayerButtonStyle}"
                ToolTipService.ToolTip="{x:Bind strings:Resources.More}">
                <FontIcon Glyph="&#xE10C;" />
            </Button>

            <Button
                x:Name="ExitCompactOverlayButton"
                local:AcceleratorService.ToolTip="{x:Bind strings:Resources.ExitCompactOverlay}"
                Command="{x:Bind ViewModel.ToggleCompactLayoutCommand}"
                Style="{StaticResource PlayerButtonStyle}"
                Visibility="Collapsed">
                <Button.KeyboardAccelerators>
                    <KeyboardAccelerator Key="Escape" />
                </Button.KeyboardAccelerators>
                <FontIcon Glyph="&#xEE47;" />
            </Button>
        </StackPanel>

        <VisualStateManager.VisualStateGroups>
            <!--<VisualStateGroup x:Name="PreviousNextVisibility">
                <VisualState x:Name="PreviousNextHidden" />
                <VisualState x:Name="PreviousNextVisible">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind ViewModel.ShowPreviousNext, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="PreviousButton.Visibility" Value="Visible" />
                        <Setter Target="NextButton.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>-->

            <VisualStateGroup x:Name="LayoutGroup">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Fullscreen">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind ViewModel.IsFullscreen, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="FullscreenButtonIcon.Glyph" Value="&#xE1D8;" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Compact">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind ViewModel.IsCompact, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MuteButton.Visibility" Value="Collapsed" />
                        <Setter Target="MoreButton.Visibility" Value="Collapsed" />
                        <Setter Target="RepeatButton.Visibility" Value="Collapsed" />
                        <Setter Target="AudioAndCaptionButton.Visibility" Value="Collapsed" />
                        <Setter Target="FullscreenButton.Visibility" Value="Collapsed" />
                        <Setter Target="ExitCompactOverlayButton.Visibility" Value="Visible" />
                        <Setter Target="PlayPauseButton.Margin" Value="2,0,2,0" />
                        <Setter Target="SeekBar.(Grid.Row)" Value="2" />
                        <Setter Target="SeekBar.ProgressOnly" Value="True" />
                        <Setter Target="SeekBar.Margin" Value="0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Mini">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind IsMinimal, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MuteButton.Visibility" Value="Collapsed" />
                        <Setter Target="CompactVolumeButton.Visibility" Value="Visible" />
                        <Setter Target="AudioAndCaptionButton.Visibility" Value="Collapsed" />
                        <Setter Target="FullscreenButton.Visibility" Value="Collapsed" />
                        <Setter Target="PlayPauseButton.Style" Value="{StaticResource SmallPlayerButtonStyle}" />
                        <Setter Target="PreviousButton.Style" Value="{StaticResource SmallPlayerButtonStyle}" />
                        <Setter Target="NextButton.Style" Value="{StaticResource SmallPlayerButtonStyle}" />
                        <Setter Target="MoreButton.Style" Value="{StaticResource SmallPlayerButtonStyle}" />
                        <Setter Target="RepeatButton.Style" Value="{StaticResource SmallPlayerToggleButtonStyle}" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</UserControl>
