<Page
    x:Class="Screenbox.Pages.PlayerPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals"
    xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
    xmlns:controls="using:Screenbox.Controls"
    xmlns:converters="using:Screenbox.Converters"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:pages="using:Screenbox.Pages"
    xmlns:strings="using:Screenbox.Strings"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI"
    muxc:BackdropMaterial.ApplyToRootOrPageBackground="True"
    toolkit:ApplicationViewExtensions.ExtendViewIntoTitleBar="True"
    toolkit:ApplicationViewExtensions.Title="{x:Bind ViewModel.MediaTitle, Mode=OneWay}"
    toolkit:TitleBarExtensions.ButtonBackgroundColor="Transparent"
    toolkit:TitleBarExtensions.ButtonInactiveBackgroundColor="Transparent"
    toolkit:TitleBarExtensions.InactiveBackgroundColor="Transparent"
    RequestedTheme="Dark"
    mc:Ignorable="d">
    <Page.Resources>
        <ResourceDictionary>
            <LinearGradientBrush x:Key="PlayerControlsBackground" StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Offset="0" Color="#00000000" />
                <GradientStop Offset="1" Color="#99000000" />
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="TitleBarBackground" StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Offset="1" Color="#00000000" />
                <GradientStop Offset="0" Color="#99000000" />
            </LinearGradientBrush>

            <ThemeShadow x:Name="SharedShadow" />
        </ResourceDictionary>
    </Page.Resources>

    <Grid>
        <!--
            Due to the current LibVLC limitation, there can only be one instance of the media player element per LibVLC instance.
            This means the player will break if you navigate away from the PlayerPage.
            Have an inline frame to load other pages without navigating away.
            This will go away with LibVLC 4.x
        -->
        <Frame
            x:Name="InlineFrame"
            x:Load="False"
            Visibility="Collapsed">
            <Frame.Content>
                <pages:MainPage x:Name="MainPage" DataContext="{x:Bind ViewModel}" />
            </Frame.Content>
        </Frame>

        <Grid
            x:Name="LayoutRoot"
            Background="Black"
            PointerMoved="{x:Bind ViewModel.OnPointerMoved}"
            Translation="0,0,8">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="FirstColumn" Width="*" />
                <ColumnDefinition x:Name="SecondColumn" Width="0" />
            </Grid.ColumnDefinitions>

            <Border
                x:Name="HeaderBackground"
                Grid.Row="0"
                Grid.Column="0"
                Height="70"
                MinHeight="32"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="{StaticResource TitleBarBackground}"
                Canvas.ZIndex="3" />

            <Grid
                x:Name="TitleBarArea"
                Grid.Row="0"
                Grid.Column="0"
                VerticalAlignment="Top"
                Canvas.ZIndex="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="LeftPaddingColumn" Width="0" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition x:Name="RightPaddingColumn" Width="0" />
                </Grid.ColumnDefinitions>
                <Border
                    x:Name="TitleBarElement"
                    Grid.Column="0"
                    Grid.ColumnSpan="5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Background="Transparent" />

                <Button
                    x:Name="BackButton"
                    Grid.Column="1"
                    Width="46"
                    Height="46"
                    Margin="6,6,2,6"
                    Background="Transparent"
                    BorderThickness="0"
                    Click="{x:Bind ViewModel.OnBackRequested}"
                    ToolTipService.ToolTip="{x:Bind strings:Resources.Back}">
                    <muxc:AnimatedIcon>
                        <muxc:AnimatedIcon.Source>
                            <animatedvisuals:AnimatedBackVisualSource />
                        </muxc:AnimatedIcon.Source>
                        <muxc:AnimatedIcon.FallbackIconSource>
                            <muxc:FontIconSource Glyph="&#xe70d;" />
                        </muxc:AnimatedIcon.FallbackIconSource>
                    </muxc:AnimatedIcon>
                </Button>

                <Button
                    x:Name="PlayQueueButton"
                    Grid.Column="2"
                    Width="46"
                    Height="46"
                    Margin="2,6,6,6"
                    HorizontalAlignment="Right"
                    Background="Transparent"
                    BorderThickness="0"
                    ToolTipService.ToolTip="{x:Bind strings:Resources.PlayQueue}">
                    <SymbolIcon Symbol="MusicInfo" />
                    <Button.Flyout>
                        <Flyout Placement="BottomEdgeAlignedLeft">
                            <controls:PlaylistView
                                Width="420"
                                MinHeight="200"
                                MaxHeight="500"
                                IsFlyout="True" />
                        </Flyout>
                    </Button.Flyout>
                </Button>

                <TextBlock
                    x:Name="TitleText"
                    Grid.Column="3"
                    Margin="36,0,0,0"
                    VerticalAlignment="Center"
                    FontSize="20"
                    FontWeight="SemiBold"
                    IsHitTestVisible="False"
                    Text="{x:Bind ViewModel.MediaTitle, Mode=OneWay}"
                    TextTrimming="CharacterEllipsis" />
            </Grid>

            <controls:PlayerElement
                x:Name="VideoView"
                Grid.Row="0"
                Grid.RowSpan="3"
                Grid.Column="0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Click="{x:Bind ViewModel.ToggleControlsVisibility}"
                ContextFlyout="{x:Bind PlayerControls.VideoContextMenu, Mode=OneWay}"
                DoubleTapped="VideoView_OnDoubleTapped"
                ManipulationCompleted="{x:Bind ViewModel.VideoView_ManipulationCompleted}"
                ManipulationDelta="{x:Bind ViewModel.VideoView_ManipulationDelta}"
                ManipulationMode="TranslateX,TranslateY"
                ManipulationStarted="{x:Bind ViewModel.VideoView_ManipulationStarted}">
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="GotFocus">
                        <core:ChangePropertyAction
                            PropertyName="VideoViewFocused"
                            TargetObject="{x:Bind ViewModel}"
                            Value="True" />
                    </core:EventTriggerBehavior>
                    <core:EventTriggerBehavior EventName="LostFocus">
                        <core:ChangePropertyAction
                            PropertyName="VideoViewFocused"
                            TargetObject="{x:Bind ViewModel}"
                            Value="False" />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </controls:PlayerElement>

            <Button
                x:Name="RestorePlayerButton"
                Grid.Row="0"
                Grid.RowSpan="3"
                Grid.Column="0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                HorizontalContentAlignment="Left"
                VerticalContentAlignment="Top"
                Background="Transparent"
                Visibility="Collapsed">
                <Button.KeyboardAccelerators>
                    <KeyboardAccelerator Key="I" />
                </Button.KeyboardAccelerators>
                <muxc:AnimatedIcon Width="20">
                    <muxc:AnimatedIcon.Source>
                        <animatedvisuals:AnimatedChevronUpDownSmallVisualSource />
                    </muxc:AnimatedIcon.Source>
                    <muxc:AnimatedIcon.FallbackIconSource>
                        <muxc:SymbolIconSource Symbol="Up" />
                    </muxc:AnimatedIcon.FallbackIconSource>
                </muxc:AnimatedIcon>
                <ToolTipService.ToolTip>
                    <ToolTip Content="{x:Bind strings:Resources.RestoreView}" PlacementRect="0,6,162,90" />
                </ToolTipService.ToolTip>

                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="Click">
                        <core:ChangePropertyAction
                            PropertyName="PlayerHidden"
                            TargetObject="{x:Bind ViewModel}"
                            Value="False" />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </Button>

            <Border
                x:Name="StatusMessage"
                Grid.Row="1"
                Grid.Column="0"
                Margin="24,4"
                Padding="10"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Background="{ThemeResource AcrylicInAppFillColorDefaultBrush}"
                CornerRadius="6"
                IsHitTestVisible="False"
                Visibility="{x:Bind ViewModel.StatusMessage, Mode=OneWay, Converter={StaticResource CommonVisibilityConverter}}">
                <animations:Implicit.ShowAnimations>
                    <animations:OpacityAnimation To="1.0" Duration="0:0:0.1" />
                </animations:Implicit.ShowAnimations>

                <animations:Implicit.HideAnimations>
                    <animations:OpacityAnimation To="0.0" Duration="0:0:0.24" />
                </animations:Implicit.HideAnimations>
                <TextBlock
                    x:Name="StatusMessageText"
                    FontSize="20"
                    FontWeight="SemiBold"
                    Text="{x:Bind ViewModel.StatusMessage, Mode=OneWay}" />
            </Border>

            <muxc:ProgressRing
                Grid.Row="0"
                Grid.RowSpan="3"
                Grid.Column="0"
                Width="52"
                Height="52"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                IsActive="True"
                IsHitTestVisible="False"
                Visibility="{x:Bind ViewModel.IsOpening, Mode=OneWay, Converter={StaticResource CommonVisibilityConverter}}" />

            <controls:NotificationView
                Grid.Row="1"
                Grid.Column="0"
                Margin="12,0,12,4"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom" />

            <controls:PlayerControls
                x:Name="PlayerControls"
                Grid.Row="2"
                Grid.Column="0"
                Padding="6,20,6,12"
                Background="{StaticResource PlayerControlsBackground}"
                IsMinimal="{x:Bind ViewModel.PlayerHidden, Mode=OneWay}" />
        </Grid>

        <interactivity:Interaction.Behaviors>
            <core:DataTriggerBehavior Binding="{x:Bind ViewModel.ControlsHidden, Mode=OneWay}" Value="True">
                <core:GoToStateAction StateName="ControlsHidden" />
            </core:DataTriggerBehavior>
            <core:DataTriggerBehavior Binding="{x:Bind ViewModel.ControlsHidden, Mode=OneWay}" Value="False">
                <core:GoToStateAction StateName="ControlsVisible" />
            </core:DataTriggerBehavior>
            <core:DataTriggerBehavior Binding="{x:Bind ViewModel.PlayerHidden, Mode=OneWay}" Value="True">
                <core:GoToStateAction StateName="Mini" />
            </core:DataTriggerBehavior>
            <core:DataTriggerBehavior Binding="{x:Bind ViewModel.PlayerHidden, Mode=OneWay}" Value="False">
                <core:CallMethodAction MethodName="SetTitleBar" TargetObject="{x:Bind}" />
                <core:GoToStateAction StateName="Normal" />
            </core:DataTriggerBehavior>
        </interactivity:Interaction.Behaviors>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="ControlsVisibilityStates">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0:0:0.167" From="ControlsHidden">
                        <VisualTransition.GeneratedEasingFunction>
                            <QuadraticEase EasingMode="EaseOut" />
                        </VisualTransition.GeneratedEasingFunction>
                    </VisualTransition>
                    <VisualTransition GeneratedDuration="0:0:0.3" To="ControlsHidden">
                        <VisualTransition.GeneratedEasingFunction>
                            <QuadraticEase EasingMode="EaseIn" />
                        </VisualTransition.GeneratedEasingFunction>
                    </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="ControlsVisible" />
                <VisualState x:Name="ControlsHidden">
                    <VisualState.Setters>
                        <Setter Target="HeaderBackground.Opacity" Value="0" />
                        <Setter Target="TitleBarArea.Opacity" Value="0" />
                        <Setter Target="PlayerControls.Opacity" Value="0" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup x:Name="LayoutGroup">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Fullscreen">
                    <VisualState.Setters>
                        <Setter Target="HeaderBackground.Height" Value="NaN" />
                        <Setter Target="BackButton.Visibility" Value="Collapsed" />
                        <Setter Target="PlayQueueButton.Margin" Value="20,20,6,20" />
                        <Setter Target="PlayerControls.Padding" Value="20" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Compact">
                    <VisualState.Setters>
                        <Setter Target="HeaderBackground.Height" Value="NaN" />
                        <Setter Target="BackButton.Visibility" Value="Collapsed" />
                        <Setter Target="PlayQueueButton.Visibility" Value="Collapsed" />
                        <Setter Target="TitleBarElement.Height" Value="32" />
                        <Setter Target="TitleBarElement.Margin" Value="0" />
                        <Setter Target="TitleText.FontSize" Value="12" />
                        <Setter Target="TitleText.FontWeight" Value="Normal" />
                        <Setter Target="TitleText.Margin" Value="13,0,0,0" />
                        <Setter Target="PlayerControls.Padding" Value="4,4,4,0" />
                        <Setter Target="StatusMessageText.FontSize" Value="16" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Mini">
                    <VisualState.Setters>
                        <Setter Target="InlineFrame.Visibility" Value="Visible" />
                        <Setter Target="HeaderBackground.Visibility" Value="Collapsed" />
                        <Setter Target="TitleBarArea.(Grid.Column)" Value="1" />
                        <Setter Target="BackButton.Visibility" Value="Collapsed" />
                        <Setter Target="HeaderBackground.Height" Value="NaN" />
                        <Setter Target="PlayQueueButton.Visibility" Value="Collapsed" />
                        <Setter Target="TitleBarElement.Margin" Value="0" />
                        <Setter Target="TitleText.FontSize" Value="14" />
                        <Setter Target="TitleText.FontWeight" Value="SemiBold" />
                        <Setter Target="TitleText.Margin" Value="16,4,10,0" />
                        <Setter Target="TitleText.(Grid.ColumnSpan)" Value="2" />
                        <Setter Target="StatusMessage.Visibility" Value="Collapsed" />
                        <Setter Target="VideoView.CornerRadius" Value="4" />
                        <Setter Target="VideoView.IsEnabled" Value="False" />
                        <Setter Target="RestorePlayerButton.Visibility" Value="Visible" />
                        <Setter Target="PlayerControls.(Grid.Column)" Value="1" />
                        <!--<Setter Target="PlayerControls.MinWidth" Value="302" />
                        <Setter Target="PlayerControls.MaxWidth" Value="392" />-->
                        <Setter Target="PlayerControls.Background" Value="Transparent" />
                        <Setter Target="PlayerControls.Padding" Value="0" />
                        <Setter Target="PlayerControls.Margin" Value="6,0,0,0" />
                        <Setter Target="PlayerControls.VerticalAlignment" Value="Center" />
                        <Setter Target="FirstColumn.Width" Value="162" />
                        <Setter Target="SecondColumn.Width" Value="*" />
                        <Setter Target="LayoutRoot.VerticalAlignment" Value="Bottom" />
                        <Setter Target="LayoutRoot.HorizontalAlignment" Value="Right" />
                        <Setter Target="LayoutRoot.Margin" Value="8,0,8,8" />
                        <Setter Target="LayoutRoot.Padding" Value="8,8,8,8" />
                        <Setter Target="LayoutRoot.Shadow" Value="{StaticResource SharedShadow}" />
                        <Setter Target="LayoutRoot.Height" Value="114" />
                        <Setter Target="LayoutRoot.Width" Value="484" />
                        <Setter Target="LayoutRoot.CornerRadius" Value="8" />
                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource AcrylicInAppFillColorDefaultBrush}" />
                        <Setter Target="LayoutRoot.BorderBrush" Value="{ThemeResource ControlElevationBorderBrush}" />
                        <Setter Target="LayoutRoot.BorderThickness" Value="1" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
