<Page
    x:Class="Screenbox.Pages.PlayerPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals"
    xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
    xmlns:controls="using:Screenbox.Controls"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:pages="using:Screenbox.Pages"
    xmlns:strings="using:Screenbox.Strings"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI"
    toolkit:ApplicationViewExtensions.ExtendViewIntoTitleBar="True"
    toolkit:ApplicationViewExtensions.Title="{x:Bind ViewModel.MediaTitle, Mode=OneWay}"
    toolkit:TitleBarExtensions.ButtonBackgroundColor="Transparent"
    toolkit:TitleBarExtensions.ButtonInactiveBackgroundColor="Transparent"
    toolkit:TitleBarExtensions.InactiveBackgroundColor="Transparent"
    Background="Black"
    RequestedTheme="Dark"
    mc:Ignorable="d">
    <Page.Resources>
        <ResourceDictionary>
            <LinearGradientBrush x:Key="PlayerControlsBackground" StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Offset="0" Color="#00000000" />
                <GradientStop Offset="1" Color="#99000000" />
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="TitleBarBackground" StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Offset="1" Color="#00000000" />
                <GradientStop Offset="0" Color="#99000000" />
            </LinearGradientBrush>

            <Style TargetType="FontIcon">
                <Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
                <Setter Property="FontSize" Value="16" />
            </Style>

            <MenuFlyout x:Key="VideoContextMenu">
                <ToggleMenuFlyoutItem
                    Icon="RepeatOne"
                    IsChecked="{x:Bind ViewModel.ShouldLoop, Mode=TwoWay}"
                    Text="{x:Bind strings:Resources.Loop}" />
                <MenuFlyoutSubItem Icon="{toolkit:FontIcon FontFamily={StaticResource SymbolThemeFontFamily}, Glyph=&#xEC57;}" Text="{x:Bind strings:Resources.PlaybackSpeed}">
                    <muxc:RadioMenuFlyoutItem
                        Click="{x:Bind PlaybackSpeedItem_Click}"
                        GroupName="SpeedGroup"
                        Text="0.25" />
                    <muxc:RadioMenuFlyoutItem
                        Click="{x:Bind PlaybackSpeedItem_Click}"
                        GroupName="SpeedGroup"
                        Text="0.5" />
                    <muxc:RadioMenuFlyoutItem
                        Click="{x:Bind PlaybackSpeedItem_Click}"
                        GroupName="SpeedGroup"
                        Text="0.75" />
                    <muxc:RadioMenuFlyoutItem
                        Click="{x:Bind PlaybackSpeedItem_Click}"
                        GroupName="SpeedGroup"
                        IsChecked="True"
                        Text="1" />
                    <muxc:RadioMenuFlyoutItem
                        Click="{x:Bind PlaybackSpeedItem_Click}"
                        GroupName="SpeedGroup"
                        Text="1.25" />
                    <muxc:RadioMenuFlyoutItem
                        Click="{x:Bind PlaybackSpeedItem_Click}"
                        GroupName="SpeedGroup"
                        Text="1.5" />
                    <muxc:RadioMenuFlyoutItem
                        Click="{x:Bind PlaybackSpeedItem_Click}"
                        GroupName="SpeedGroup"
                        Text="1.75" />
                    <muxc:RadioMenuFlyoutItem
                        Click="{x:Bind PlaybackSpeedItem_Click}"
                        GroupName="SpeedGroup"
                        Text="2" />
                </MenuFlyoutSubItem>
                <MenuFlyoutItem
                    Command="{x:Bind ViewModel.SaveSnapshotCommand}"
                    Icon="{toolkit:FontIcon FontFamily={StaticResource SymbolThemeFontFamily},
                                            Glyph=&#xEE71;}"
                    Text="{x:Bind strings:Resources.SaveCurrentFrame}" />
                <ToggleMenuFlyoutItem
                    Command="{x:Bind ViewModel.ToggleCompactLayoutCommand}"
                    Icon="{toolkit:FontIcon FontFamily={StaticResource SymbolThemeFontFamily},
                                            Glyph=&#xEE49;}"
                    IsChecked="{x:Bind ViewModel.IsCompact, Mode=OneWay}"
                    Text="{x:Bind strings:Resources.PictureInPicture}" />
                <ToggleMenuFlyoutItem
                    Icon="{toolkit:FontIcon FontFamily={StaticResource SymbolThemeFontFamily},
                                            Glyph=&#xE9A6;}"
                    IsChecked="{x:Bind ViewModel.ZoomToFit, Mode=TwoWay}"
                    Text="{x:Bind strings:Resources.ZoomToFit}" />
            </MenuFlyout>
        </ResourceDictionary>
    </Page.Resources>

    <Grid>
        <!--
            Due to the current LibVLC limitation, there can only be one instance of the media player element per LibVLC instance.
            This means the player will break if you navigate away from the PlayerPage.
            Have an inline frame to load other pages without navigating away.
            This will go away with LibVLC 4.x
        -->
        <Frame
            x:Name="InlineFrame"
            x:Load="False"
            Visibility="Collapsed">
            <Frame.Content>
                <pages:MainPage x:Name="MainPage" DataContext="{x:Bind ViewModel}" />
            </Frame.Content>
        </Frame>

        <Grid x:Name="LayoutRoot" PointerMoved="{x:Bind ViewModel.OnPointerMoved}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Border
                x:Name="HeaderBackground"
                Grid.Row="0"
                Height="70"
                MinHeight="32"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="{StaticResource TitleBarBackground}"
                Canvas.ZIndex="3" />

            <Grid
                x:Name="TitleBarArea"
                Grid.Row="0"
                VerticalAlignment="Top"
                Canvas.ZIndex="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="LeftPaddingColumn" Width="0" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition x:Name="RightPaddingColumn" Width="0" />
                </Grid.ColumnDefinitions>
                <Border
                    x:Name="TitleBarElement"
                    Grid.Column="0"
                    Grid.ColumnSpan="5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Background="Transparent" />

                <Button
                    x:Name="BackButton"
                    Grid.Column="1"
                    Width="46"
                    Height="46"
                    Margin="6,6,2,6"
                    Background="Transparent"
                    BorderThickness="0"
                    Click="{x:Bind ViewModel.OnBackRequested}"
                    ToolTipService.ToolTip="{x:Bind strings:Resources.Back}">
                    <muxc:AnimatedIcon>
                        <muxc:AnimatedIcon.Source>
                            <animatedvisuals:AnimatedBackVisualSource />
                        </muxc:AnimatedIcon.Source>
                    </muxc:AnimatedIcon>
                </Button>

                <Button
                    x:Name="PlayQueueButton"
                    Grid.Column="2"
                    Width="46"
                    Height="46"
                    Margin="2,6,6,6"
                    HorizontalAlignment="Right"
                    Background="Transparent"
                    BorderThickness="0"
                    ToolTipService.ToolTip="{x:Bind strings:Resources.PlayQueue}">
                    <SymbolIcon Symbol="MusicInfo" />
                    <Button.Flyout>
                        <Flyout Placement="BottomEdgeAlignedLeft">
                            <controls:PlaylistView Width="420" />
                        </Flyout>
                    </Button.Flyout>
                </Button>

                <TextBlock
                    x:Name="TitleText"
                    Grid.Column="3"
                    Margin="36,0,0,0"
                    VerticalAlignment="Center"
                    FontSize="20"
                    FontWeight="SemiBold"
                    IsHitTestVisible="False"
                    Text="{x:Bind ViewModel.MediaTitle, Mode=OneWay}"
                    TextTrimming="CharacterEllipsis" />
            </Grid>

            <controls:VideoView
                x:Name="VideoView"
                Grid.Row="0"
                Grid.RowSpan="3"
                Grid.Column="0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Click="{x:Bind ViewModel.ToggleControlsVisibility}"
                ContextFlyout="{StaticResource VideoContextMenu}"
                DoubleTapped="{x:Bind ViewModel.ToggleFullscreen}"
                ManipulationCompleted="{x:Bind ViewModel.VideoView_ManipulationCompleted}"
                ManipulationDelta="{x:Bind ViewModel.VideoView_ManipulationDelta}"
                ManipulationMode="TranslateX,TranslateY"
                ManipulationStarted="{x:Bind ViewModel.VideoView_ManipulationStarted}"
                SizeChanged="{x:Bind ViewModel.OnSizeChanged}">
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="GotFocus">
                        <core:ChangePropertyAction
                            PropertyName="VideoViewFocused"
                            TargetObject="{x:Bind ViewModel}"
                            Value="True" />
                    </core:EventTriggerBehavior>
                    <core:EventTriggerBehavior EventName="LostFocus">
                        <core:ChangePropertyAction
                            PropertyName="VideoViewFocused"
                            TargetObject="{x:Bind ViewModel}"
                            Value="False" />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </controls:VideoView>

            <Border
                x:Name="StatusMessage"
                Grid.Row="1"
                Grid.Column="0"
                Margin="24,4"
                Padding="10"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Background="{ThemeResource AcrylicInAppFillColorDefaultBrush}"
                CornerRadius="6"
                IsHitTestVisible="False"
                Visibility="{x:Bind ViewModel.StatusMessage, Mode=OneWay, Converter={StaticResource CommonVisibilityConverter}}">
                <animations:Implicit.ShowAnimations>
                    <animations:OpacityAnimation To="1.0" Duration="0:0:0.1" />
                </animations:Implicit.ShowAnimations>

                <animations:Implicit.HideAnimations>
                    <animations:OpacityAnimation To="0.0" Duration="0:0:0.24" />
                </animations:Implicit.HideAnimations>
                <TextBlock
                    x:Name="StatusMessageText"
                    FontSize="20"
                    FontWeight="SemiBold"
                    Text="{x:Bind ViewModel.StatusMessage, Mode=OneWay}" />
            </Border>

            <muxc:ProgressRing
                Grid.Row="0"
                Grid.RowSpan="3"
                Grid.Column="0"
                Width="52"
                Height="52"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                IsActive="True"
                IsHitTestVisible="False"
                Visibility="{x:Bind ViewModel.IsOpening, Mode=OneWay, Converter={StaticResource CommonVisibilityConverter}}" />

            <controls:NotificationView
                Grid.Row="1"
                Grid.Column="0"
                Margin="12,0,12,4"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom" />

            <Grid
                x:Name="PlayerControls"
                Grid.Row="2"
                Grid.Column="0"
                Padding="6,20,6,12"
                Background="{StaticResource PlayerControlsBackground}"
                XYFocusKeyboardNavigation="Enabled">
                <Grid.Resources>
                    <ResourceDictionary>
                        <StaticResource x:Key="ToggleButtonForegroundChecked" ResourceKey="TextFillColorPrimaryBrush" />
                        <StaticResource x:Key="ToggleButtonForegroundCheckedPointerOver" ResourceKey="TextFillColorPrimaryBrush" />
                        <StaticResource x:Key="ToggleButtonForegroundCheckedPressed" ResourceKey="TextFillColorSecondaryBrush" />
                        <StaticResource x:Key="ToggleButtonForegroundCheckedDisabled" ResourceKey="TextFillColorDisabledBrush" />
                        <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="Transparent" />
                        <StaticResource x:Key="ToggleButtonBackgroundCheckedPointerOver" ResourceKey="ControlFillColorSecondaryBrush" />
                        <StaticResource x:Key="ToggleButtonBackgroundCheckedPressed" ResourceKey="ControlFillColorTertiaryBrush" />
                        <StaticResource x:Key="ToggleButtonBackgroundCheckedDisabled" ResourceKey="ControlFillColorDisabledBrush" />
                        <SolidColorBrush x:Key="ButtonBackgroundDisabled" Color="Transparent" />

                        <Style BasedOn="{StaticResource DefaultButtonStyle}" TargetType="Button">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Height" Value="40" />
                            <Setter Property="Width" Value="42" />
                            <Setter Property="Margin" Value="2,0" />
                        </Style>

                        <Style BasedOn="{StaticResource DefaultToggleButtonStyle}" TargetType="ToggleButton">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Height" Value="40" />
                            <Setter Property="Width" Value="42" />
                            <Setter Property="Margin" Value="2,0" />
                        </Style>
                    </ResourceDictionary>
                </Grid.Resources>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <controls:SeekBar
                    x:Name="SeekBar"
                    Grid.Row="0"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    Foreground="Transparent"
                    ToolTipService.ToolTip="{x:Bind strings:Resources.Seek}" />

                <StackPanel
                    Grid.Row="1"
                    Grid.Column="0"
                    Orientation="Horizontal">
                    <Button
                        x:Name="PlayPauseButton"
                        Margin="0,0,2,0"
                        controls:AcceleratorService.ToolTip="{x:Bind strings:Resources.PlayPauseToggle(ViewModel.IsPlaying), Mode=OneWay}"
                        AccessKey="P"
                        Command="{x:Bind VideoView.ViewModel.PlayPauseCommand}">
                        <Button.KeyboardAccelerators>
                            <KeyboardAccelerator Key="P" />
                            <KeyboardAccelerator Key="K" />
                        </Button.KeyboardAccelerators>
                        <FontIcon Glyph="{x:Bind GetPlayPauseGlyph(ViewModel.IsPlaying), Mode=OneWay}" />
                    </Button>

                    <Button
                        x:Name="PreviousButton"
                        Margin="2,0,0,0"
                        controls:AcceleratorService.ToolTip="{x:Bind strings:Resources.Previous}"
                        BorderThickness="0,0,1,0"
                        Command="{x:Bind PlaylistViewModel.PreviousCommand}"
                        CornerRadius="4,0,0,4"
                        Visibility="Collapsed">
                        <FontIcon Glyph="&#xE100;" />
                        <Button.KeyboardAccelerators>
                            <KeyboardAccelerator Key="PageUp" />
                        </Button.KeyboardAccelerators>
                    </Button>
                    <Button
                        x:Name="NextButton"
                        Margin="0,0,2,0"
                        controls:AcceleratorService.ToolTip="{x:Bind strings:Resources.Next}"
                        Command="{x:Bind PlaylistViewModel.NextCommand}"
                        CornerRadius="0,4,4,0"
                        Visibility="Collapsed">
                        <FontIcon Glyph="&#xE101;" />
                        <Button.KeyboardAccelerators>
                            <KeyboardAccelerator Key="PageDown" />
                        </Button.KeyboardAccelerators>
                    </Button>

                    <muxc:ToggleSplitButton
                        x:Name="MuteButton"
                        Height="40"
                        Margin="2,0"
                        controls:AcceleratorService.ToolTip="{x:Bind strings:Resources.MuteToggle(VolumeControl.ViewModel.IsMute), Mode=OneWay}"
                        AccessKey="M"
                        Background="Transparent"
                        BorderThickness="0"
                        IsChecked="{x:Bind VolumeControl.ViewModel.IsMute, Mode=TwoWay}">
                        <muxc:SplitButton.KeyboardAccelerators>
                            <KeyboardAccelerator Key="M" />
                        </muxc:SplitButton.KeyboardAccelerators>
                        <muxc:SplitButton.Flyout>
                            <Flyout>
                                <controls:VolumeControl x:Name="VolumeControl" />
                            </Flyout>
                        </muxc:SplitButton.Flyout>
                        <FontIcon Glyph="{x:Bind VolumeControl.GetMuteToggleGlyph(VolumeControl.ViewModel.IsMute), Mode=OneWay}" />
                    </muxc:ToggleSplitButton>

                    <controls:TimeDisplay
                        MinWidth="0"
                        Margin="6,0,0,0"
                        VerticalAlignment="Center"
                        Length="{x:Bind SeekBar.ViewModel.Length, Mode=OneWay}"
                        Time="{x:Bind SeekBar.ViewModel.Time, Mode=OneWay}" />
                    <TextBlock
                        MinWidth="0"
                        Margin="8,0,8,0"
                        VerticalAlignment="Center"
                        Visibility="{x:Bind SeekBar.ViewModel.Chapters, Mode=OneWay, Converter={StaticResource CommonVisibilityConverter}}">
                        <Run Text="• " />
                        <Run Text="{x:Bind ViewModel.GetChapterName(SeekBar.ViewModel.CurrentChapter.Name), Mode=OneWay}" />
                    </TextBlock>
                </StackPanel>

                <StackPanel
                    Grid.Row="1"
                    Grid.Column="1"
                    HorizontalAlignment="Right"
                    Orientation="Horizontal">
                    <ToggleButton
                        x:Name="RepeatButton"
                        controls:AcceleratorService.ToolTip="Repeat"
                        IsThreeState="True">
                        <FontIcon Glyph="&#xf5e7;" />
                        <ToggleButton.KeyboardAccelerators>
                            <KeyboardAccelerator Key="R" Modifiers="Control" />
                        </ToggleButton.KeyboardAccelerators>
                    </ToggleButton>

                    <Button
                        x:Name="AudioAndCaptionButton"
                        VerticalAlignment="Stretch"
                        controls:AcceleratorService.ToolTip="{x:Bind strings:Resources.AudioAndCaption}"
                        AccessKey="C"
                        Flyout="{x:Bind controls:AudioTrackSubtitlePicker.GetFlyout()}">
                        <FontIcon Glyph="&#xED1F;" />
                        <Button.KeyboardAccelerators>
                            <KeyboardAccelerator Key="C" />
                        </Button.KeyboardAccelerators>
                    </Button>

                    <ToggleButton
                        x:Name="FullscreenButton"
                        controls:AcceleratorService.ToolTip="{x:Bind strings:Resources.FullscreenToggle(ViewModel.IsFullscreen), Mode=OneWay}"
                        AccessKey="F"
                        Command="{x:Bind ViewModel.ToggleFullscreenCommand}"
                        IsChecked="{x:Bind ViewModel.IsFullscreen, Mode=OneWay}">
                        <ToggleButton.KeyboardAccelerators>
                            <KeyboardAccelerator Key="F" />
                        </ToggleButton.KeyboardAccelerators>
                        <FontIcon x:Name="FullscreenButtonIcon" Glyph="&#xE1D9;" />
                    </ToggleButton>

                    <Button
                        x:Name="MoreButton"
                        Margin="2,0,0,0"
                        Flyout="{StaticResource VideoContextMenu}"
                        ToolTipService.ToolTip="{x:Bind strings:Resources.More}">
                        <FontIcon Glyph="&#xE10C;" />
                    </Button>

                    <Button
                        x:Name="ExitCompactOverlayButton"
                        controls:AcceleratorService.ToolTip="{x:Bind strings:Resources.ExitCompactOverlay}"
                        Command="{x:Bind ViewModel.ToggleCompactLayoutCommand}"
                        Visibility="Collapsed">
                        <Button.KeyboardAccelerators>
                            <KeyboardAccelerator Key="Escape" />
                        </Button.KeyboardAccelerators>
                        <FontIcon Glyph="&#xEE47;" />
                    </Button>
                </StackPanel>
            </Grid>

            <animations:Implicit.ShowAnimations>
                <animations:TranslationAnimation
                    From="{x:Bind GetHeightAsVec3(ViewModel.ViewSize), Mode=OneWay}"
                    To="0"
                    Duration="0:0:0.5" />
            </animations:Implicit.ShowAnimations>

            <animations:Implicit.HideAnimations>
                <animations:TranslationAnimation
                    From="0"
                    To="{x:Bind GetHeightAsVec3(ViewModel.ViewSize), Mode=OneWay}"
                    Duration="0:0:0.5" />
            </animations:Implicit.HideAnimations>

        </Grid>

        <interactivity:Interaction.Behaviors>
            <core:DataTriggerBehavior Binding="{x:Bind ViewModel.ControlsHidden, Mode=OneWay}" Value="True">
                <core:GoToStateAction StateName="ControlsHidden" />
            </core:DataTriggerBehavior>
            <core:DataTriggerBehavior Binding="{x:Bind ViewModel.ControlsHidden, Mode=OneWay}" Value="False">
                <core:GoToStateAction StateName="ControlsVisible" />
            </core:DataTriggerBehavior>
            <core:DataTriggerBehavior Binding="{x:Bind ViewModel.PlayerHidden, Mode=OneWay}" Value="True">
                <core:CallMethodAction MethodName="SetTitleBar" TargetObject="{x:Bind MainPage}" />
                <core:GoToStateAction StateName="PlayerHidden" />
            </core:DataTriggerBehavior>
            <core:DataTriggerBehavior Binding="{x:Bind ViewModel.PlayerHidden, Mode=OneWay}" Value="False">
                <core:CallMethodAction MethodName="SetTitleBar" TargetObject="{x:Bind}" />
                <core:GoToStateAction StateName="PlayerVisible" />
            </core:DataTriggerBehavior>
            <core:DataTriggerBehavior Binding="{x:Bind ViewModel.IsFullscreen, Mode=OneWay}" Value="True">
                <core:GoToStateAction StateName="Fullscreen" />
            </core:DataTriggerBehavior>
            <core:DataTriggerBehavior Binding="{x:Bind ViewModel.IsFullscreen, Mode=OneWay}" Value="False">
                <core:GoToStateAction StateName="Normal" />
            </core:DataTriggerBehavior>
            <core:DataTriggerBehavior Binding="{x:Bind ViewModel.IsCompact, Mode=OneWay}" Value="True">
                <core:GoToStateAction StateName="Compact" />
                <core:GoToStateAction StateName="PreviousNextHidden" />
            </core:DataTriggerBehavior>
            <core:DataTriggerBehavior Binding="{x:Bind ViewModel.IsCompact, Mode=OneWay}" Value="False">
                <core:GoToStateAction StateName="Normal" />
                <core:CallMethodAction MethodName="SetPreviousNextButtonVisibility" TargetObject="{x:Bind}" />
            </core:DataTriggerBehavior>
        </interactivity:Interaction.Behaviors>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="PageStates">
                <VisualState x:Name="PlayerVisible" />
                <VisualState x:Name="PlayerHidden">
                    <VisualState.Setters>
                        <Setter Target="InlineFrame.Visibility" Value="Visible" />
                        <Setter Target="LayoutRoot.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="ControlsVisibilityStates">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0:0:0.167" From="ControlsHidden">
                        <VisualTransition.GeneratedEasingFunction>
                            <QuadraticEase EasingMode="EaseOut" />
                        </VisualTransition.GeneratedEasingFunction>
                    </VisualTransition>
                    <VisualTransition GeneratedDuration="0:0:0.3" To="ControlsHidden">
                        <VisualTransition.GeneratedEasingFunction>
                            <QuadraticEase EasingMode="EaseIn" />
                        </VisualTransition.GeneratedEasingFunction>
                    </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="ControlsVisible" />
                <VisualState x:Name="ControlsHidden">
                    <VisualState.Setters>
                        <Setter Target="HeaderBackground.Opacity" Value="0" />
                        <Setter Target="TitleBarArea.Opacity" Value="0" />
                        <Setter Target="PlayerControls.Opacity" Value="0" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="PreviousNextVisibility">
                <VisualState x:Name="PreviousNextHidden" />
                <VisualState x:Name="PreviousNextVisible">
                    <VisualState.Setters>
                        <Setter Target="PreviousButton.Visibility" Value="Visible" />
                        <Setter Target="NextButton.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="LayoutGroup">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Fullscreen">
                    <VisualState.Setters>
                        <Setter Target="HeaderBackground.Height" Value="NaN" />
                        <Setter Target="BackButton.Visibility" Value="Collapsed" />
                        <Setter Target="PlayQueueButton.Margin" Value="20,20,6,20" />
                        <Setter Target="FullscreenButtonIcon.Glyph" Value="&#xE1D8;" />
                        <Setter Target="PlayerControls.Padding" Value="20" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Compact">
                    <VisualState.Setters>
                        <Setter Target="HeaderBackground.Height" Value="NaN" />
                        <Setter Target="BackButton.Visibility" Value="Collapsed" />
                        <Setter Target="PlayQueueButton.Visibility" Value="Collapsed" />
                        <Setter Target="TitleBarElement.Height" Value="32" />
                        <Setter Target="TitleBarElement.Margin" Value="0" />
                        <Setter Target="TitleText.FontSize" Value="12" />
                        <Setter Target="TitleText.FontWeight" Value="Normal" />
                        <Setter Target="TitleText.Margin" Value="13,0,0,0" />
                        <Setter Target="MuteButton.Visibility" Value="Collapsed" />
                        <Setter Target="MoreButton.Visibility" Value="Collapsed" />
                        <Setter Target="RepeatButton.Visibility" Value="Collapsed" />
                        <Setter Target="AudioAndCaptionButton.Visibility" Value="Collapsed" />
                        <Setter Target="FullscreenButton.Visibility" Value="Collapsed" />
                        <Setter Target="ExitCompactOverlayButton.Visibility" Value="Visible" />
                        <Setter Target="SeekBar.(Grid.Row)" Value="2" />
                        <Setter Target="SeekBar.ProgressOnly" Value="True" />
                        <Setter Target="PlayerControls.Padding" Value="4,4,4,0" />
                        <Setter Target="StatusMessageText.FontSize" Value="16" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
