<Page
    x:Class="Screenbox.Pages.PlayerPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals"
    xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
    xmlns:controls="using:Screenbox.Controls"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:lvs="using:LibVLCSharp.Platforms.UWP"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:pages="using:Screenbox.Pages"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI"
    toolkit:ApplicationViewExtensions.ExtendViewIntoTitleBar="True"
    toolkit:ApplicationViewExtensions.Title="{x:Bind ViewModel.MediaTitle, Mode=OneWay}"
    toolkit:TitleBarExtensions.ButtonBackgroundColor="Transparent"
    toolkit:TitleBarExtensions.ButtonInactiveBackgroundColor="Transparent"
    toolkit:TitleBarExtensions.InactiveBackgroundColor="Transparent"
    Background="Black"
    RequestedTheme="Dark"
    mc:Ignorable="d">
    <Page.Resources>
        <ResourceDictionary>
            <StaticResource x:Key="ToggleButtonForegroundChecked" ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="ToggleButtonForegroundCheckedPointerOver" ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="ToggleButtonForegroundCheckedPressed" ResourceKey="TextFillColorSecondaryBrush" />
            <StaticResource x:Key="ToggleButtonForegroundCheckedDisabled" ResourceKey="TextFillColorDisabledBrush" />
            <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="Transparent" />
            <StaticResource x:Key="ToggleButtonBackgroundCheckedPointerOver" ResourceKey="ControlFillColorSecondaryBrush" />
            <StaticResource x:Key="ToggleButtonBackgroundCheckedPressed" ResourceKey="ControlFillColorTertiaryBrush" />
            <StaticResource x:Key="ToggleButtonBackgroundCheckedDisabled" ResourceKey="ControlFillColorDisabledBrush" />

            <LinearGradientBrush x:Key="PlayerControlsBackground" StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Offset="0" Color="#00000000" />
                <GradientStop Offset="1" Color="#99000000" />
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="TitleBarBackground" StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Offset="1" Color="#00000000" />
                <GradientStop Offset="0" Color="#99000000" />
            </LinearGradientBrush>

            <Style BasedOn="{StaticResource DefaultButtonStyle}" TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Height" Value="40" />
                <Setter Property="Margin" Value="2,0" />
            </Style>

            <Style BasedOn="{StaticResource DefaultToggleButtonStyle}" TargetType="ToggleButton">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Height" Value="40" />
                <Setter Property="Margin" Value="2,0" />
            </Style>

            <MenuFlyout x:Key="VideoContextMenu">
                <ToggleMenuFlyoutItem
                    Icon="RepeatOne"
                    IsChecked="{x:Bind ViewModel.ShouldLoop, Mode=TwoWay}"
                    Text="Loop" />
                <MenuFlyoutSubItem Icon="{toolkit:FontIcon FontFamily={StaticResource SymbolThemeFontFamily}, Glyph=&#xEC57;}" Text="Playback speed">
                    <muxc:RadioMenuFlyoutItem
                        Click="{x:Bind PlaybackSpeedItem_Click}"
                        GroupName="SpeedGroup"
                        Text="0.25" />
                    <muxc:RadioMenuFlyoutItem
                        Click="{x:Bind PlaybackSpeedItem_Click}"
                        GroupName="SpeedGroup"
                        Text="0.5" />
                    <muxc:RadioMenuFlyoutItem
                        Click="{x:Bind PlaybackSpeedItem_Click}"
                        GroupName="SpeedGroup"
                        Text="0.75" />
                    <muxc:RadioMenuFlyoutItem
                        Click="{x:Bind PlaybackSpeedItem_Click}"
                        GroupName="SpeedGroup"
                        IsChecked="True"
                        Text="1" />
                    <muxc:RadioMenuFlyoutItem
                        Click="{x:Bind PlaybackSpeedItem_Click}"
                        GroupName="SpeedGroup"
                        Text="1.25" />
                    <muxc:RadioMenuFlyoutItem
                        Click="{x:Bind PlaybackSpeedItem_Click}"
                        GroupName="SpeedGroup"
                        Text="1.5" />
                    <muxc:RadioMenuFlyoutItem
                        Click="{x:Bind PlaybackSpeedItem_Click}"
                        GroupName="SpeedGroup"
                        Text="1.75" />
                    <muxc:RadioMenuFlyoutItem
                        Click="{x:Bind PlaybackSpeedItem_Click}"
                        GroupName="SpeedGroup"
                        Text="2" />
                </MenuFlyoutSubItem>
                <MenuFlyoutSeparator />
                <MenuFlyoutItem
                    Command="{x:Bind ViewModel.SaveSnapshotCommand}"
                    Icon="{toolkit:FontIcon FontFamily={StaticResource SymbolThemeFontFamily},
                                            Glyph=&#xEE71;}"
                    Text="Save current frame" />
                <ToggleMenuFlyoutItem
                    Command="{x:Bind ViewModel.ToggleCompactLayoutCommand}"
                    Icon="{toolkit:FontIcon FontFamily={StaticResource SymbolThemeFontFamily},
                                            Glyph=&#xEE49;}"
                    IsChecked="{x:Bind ViewModel.IsCompact, Mode=OneWay}"
                    Text="Picture in picture" />
                <ToggleMenuFlyoutItem
                    Icon="{toolkit:FontIcon FontFamily={StaticResource SymbolThemeFontFamily},
                                            Glyph=&#xE9A6;}"
                    IsChecked="{x:Bind ViewModel.ZoomToFit, Mode=TwoWay}"
                    Text="Zoom to fit" />
            </MenuFlyout>
        </ResourceDictionary>
    </Page.Resources>

    <Grid>
        <Border
            x:Name="TitleBarElement"
            Grid.Row="0"
            MinHeight="52"
            Margin="64,0,0,0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Top"
            Background="Transparent"
            Canvas.ZIndex="2" />

        <!--
            Due to the current LibVLC limitation, there can only be one instance of the media player element per LibVLC instance.
            This means the player will break if you navigate away from the PlayerPage.
            Have an inline frame to load other pages without navigating away.
            This will go away with LibVLC 4.x
        -->
        <Frame x:Name="InlineFrame" Visibility="Collapsed">
            <Frame.Content>
                <pages:MainPage DataContext="{x:Bind ViewModel}" />
            </Frame.Content>
        </Frame>

        <Grid x:Name="LayoutRoot" PointerMoved="{x:Bind ViewModel.OnPointerMoved}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Border
                x:Name="Header"
                Grid.Row="0"
                MinHeight="32"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="{StaticResource TitleBarBackground}"
                Canvas.ZIndex="1">
                <Border.RenderTransform>
                    <TranslateTransform x:Name="HeaderTranslate" />
                </Border.RenderTransform>
                <TextBlock
                    x:Name="TitleText"
                    Margin="80,0,90,0"
                    VerticalAlignment="Center"
                    FontSize="28"
                    FontWeight="SemiBold"
                    Text="{x:Bind ViewModel.MediaTitle, Mode=OneWay}"
                    TextTrimming="CharacterEllipsis" />
            </Border>

            <Button
                x:Name="BackButton"
                Grid.Row="0"
                Width="52"
                Height="52"
                Margin="12"
                HorizontalAlignment="Left"
                Canvas.ZIndex="2"
                Click="{x:Bind ViewModel.OnBackRequested}">
                <Button.RenderTransform>
                    <TranslateTransform x:Name="BackButtonTranslate" />
                </Button.RenderTransform>
                <muxc:AnimatedIcon>
                    <muxc:AnimatedIcon.Source>
                        <animatedvisuals:AnimatedBackVisualSource />
                    </muxc:AnimatedIcon.Source>
                </muxc:AnimatedIcon>
            </Button>

            <Button
                x:Name="VideoViewButton"
                Grid.Row="0"
                Grid.RowSpan="3"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                AllowDrop="True"
                Background="Black"
                Click="{x:Bind ViewModel.ToggleControlsVisibility}"
                ContextFlyout="{StaticResource VideoContextMenu}"
                DoubleTapped="{x:Bind ViewModel.ToggleFullscreen}"
                DragOver="{x:Bind ViewModel.OnDragOver}"
                Drop="{x:Bind ViewModel.OnDrop}"
                ManipulationCompleted="{x:Bind ViewModel.VideoView_ManipulationCompleted}"
                ManipulationDelta="{x:Bind ViewModel.VideoView_ManipulationDelta}"
                ManipulationMode="TranslateX,TranslateY"
                ManipulationStarted="{x:Bind ViewModel.VideoView_ManipulationStarted}"
                Opacity="0"
                PointerWheelChanged="{x:Bind ViewModel.OnPointerWheelChanged}"
                Style="{x:Null}">
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="GotFocus">
                        <core:ChangePropertyAction
                            PropertyName="VideoViewFocused"
                            TargetObject="{x:Bind ViewModel}"
                            Value="True" />
                    </core:EventTriggerBehavior>
                    <core:EventTriggerBehavior EventName="LostFocus">
                        <core:ChangePropertyAction
                            PropertyName="VideoViewFocused"
                            TargetObject="{x:Bind ViewModel}"
                            Value="False" />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </Button>

            <lvs:VideoView
                x:Name="VideoView"
                Grid.Row="0"
                Grid.RowSpan="3"
                Canvas.ZIndex="0"
                Initialized="{x:Bind ViewModel.OnInitialized}"
                IsHitTestVisible="False"
                IsTabStop="False"
                KeyboardAcceleratorPlacementMode="Hidden"
                MediaPlayer="{x:Bind ViewModel.VlcPlayer}"
                SizeChanged="{x:Bind ViewModel.OnSizeChanged}">
                <lvs:VideoView.KeyboardAccelerators>
                    <KeyboardAccelerator
                        Key="Left"
                        Invoked="{x:Bind ViewModel.ProcessKeyboardAccelerators}"
                        ScopeOwner="{x:Bind VideoViewButton}" />
                    <KeyboardAccelerator
                        Key="Left"
                        Invoked="{x:Bind ViewModel.ProcessKeyboardAccelerators}"
                        Modifiers="Control"
                        ScopeOwner="{x:Bind VideoViewButton}" />
                    <KeyboardAccelerator
                        Key="Left"
                        Invoked="{x:Bind ViewModel.ProcessKeyboardAccelerators}"
                        Modifiers="Shift"
                        ScopeOwner="{x:Bind VideoViewButton}" />
                    <KeyboardAccelerator
                        Key="Right"
                        Invoked="{x:Bind ViewModel.ProcessKeyboardAccelerators}"
                        ScopeOwner="{x:Bind VideoViewButton}" />
                    <KeyboardAccelerator
                        Key="Right"
                        Invoked="{x:Bind ViewModel.ProcessKeyboardAccelerators}"
                        Modifiers="Control"
                        ScopeOwner="{x:Bind VideoViewButton}" />
                    <KeyboardAccelerator
                        Key="Right"
                        Invoked="{x:Bind ViewModel.ProcessKeyboardAccelerators}"
                        Modifiers="Shift"
                        ScopeOwner="{x:Bind VideoViewButton}" />
                    <KeyboardAccelerator
                        Key="Up"
                        Invoked="{x:Bind ViewModel.ProcessKeyboardAccelerators}"
                        ScopeOwner="{x:Bind VideoViewButton}" />
                    <KeyboardAccelerator
                        Key="Down"
                        Invoked="{x:Bind ViewModel.ProcessKeyboardAccelerators}"
                        ScopeOwner="{x:Bind VideoViewButton}" />
                    <KeyboardAccelerator Key="J" Invoked="{x:Bind ViewModel.ProcessKeyboardAccelerators}" />
                    <KeyboardAccelerator Key="L" Invoked="{x:Bind ViewModel.ProcessKeyboardAccelerators}" />
                    <KeyboardAccelerator Key="Number0" Invoked="{x:Bind ViewModel.ProcessKeyboardAccelerators}" />
                    <KeyboardAccelerator Key="Number1" Invoked="{x:Bind ViewModel.ProcessKeyboardAccelerators}" />
                    <KeyboardAccelerator Key="Number2" Invoked="{x:Bind ViewModel.ProcessKeyboardAccelerators}" />
                    <KeyboardAccelerator Key="Number3" Invoked="{x:Bind ViewModel.ProcessKeyboardAccelerators}" />
                    <KeyboardAccelerator Key="Number4" Invoked="{x:Bind ViewModel.ProcessKeyboardAccelerators}" />
                    <KeyboardAccelerator Key="Number5" Invoked="{x:Bind ViewModel.ProcessKeyboardAccelerators}" />
                    <KeyboardAccelerator Key="Number6" Invoked="{x:Bind ViewModel.ProcessKeyboardAccelerators}" />
                    <KeyboardAccelerator Key="Number7" Invoked="{x:Bind ViewModel.ProcessKeyboardAccelerators}" />
                    <KeyboardAccelerator Key="Number8" Invoked="{x:Bind ViewModel.ProcessKeyboardAccelerators}" />
                    <KeyboardAccelerator Key="Number9" Invoked="{x:Bind ViewModel.ProcessKeyboardAccelerators}" />
                    <KeyboardAccelerator Key="NumberPad0" Invoked="{x:Bind ViewModel.ProcessKeyboardAccelerators}" />
                    <KeyboardAccelerator Key="NumberPad1" Invoked="{x:Bind ViewModel.ProcessKeyboardAccelerators}" />
                    <KeyboardAccelerator Key="NumberPad2" Invoked="{x:Bind ViewModel.ProcessKeyboardAccelerators}" />
                    <KeyboardAccelerator Key="NumberPad3" Invoked="{x:Bind ViewModel.ProcessKeyboardAccelerators}" />
                    <KeyboardAccelerator Key="NumberPad4" Invoked="{x:Bind ViewModel.ProcessKeyboardAccelerators}" />
                    <KeyboardAccelerator Key="NumberPad5" Invoked="{x:Bind ViewModel.ProcessKeyboardAccelerators}" />
                    <KeyboardAccelerator Key="NumberPad6" Invoked="{x:Bind ViewModel.ProcessKeyboardAccelerators}" />
                    <KeyboardAccelerator Key="NumberPad7" Invoked="{x:Bind ViewModel.ProcessKeyboardAccelerators}" />
                    <KeyboardAccelerator Key="NumberPad8" Invoked="{x:Bind ViewModel.ProcessKeyboardAccelerators}" />
                    <KeyboardAccelerator Key="NumberPad9" Invoked="{x:Bind ViewModel.ProcessKeyboardAccelerators}" />
                    <KeyboardAccelerator Key="{x:Bind pages:PlayerPage.PeriodKey}" Invoked="{x:Bind ViewModel.ProcessKeyboardAccelerators}" />
                    <KeyboardAccelerator Key="{x:Bind pages:PlayerPage.CommaKey}" Invoked="{x:Bind ViewModel.ProcessKeyboardAccelerators}" />
                </lvs:VideoView.KeyboardAccelerators>
            </lvs:VideoView>

            <Border
                x:Name="StatusMessage"
                Grid.Row="1"
                Margin="24,4"
                Padding="10"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Background="{ThemeResource AcrylicInAppFillColorDefaultBrush}"
                CornerRadius="6"
                IsHitTestVisible="False"
                Visibility="{x:Bind ViewModel.StatusMessage, Mode=OneWay, Converter={StaticResource CommonVisibilityConverter}}">
                <animations:Implicit.ShowAnimations>
                    <animations:OpacityAnimation To="1.0" Duration="0:0:0.1" />
                </animations:Implicit.ShowAnimations>

                <animations:Implicit.HideAnimations>
                    <animations:OpacityAnimation To="0.0" Duration="0:0:0.24" />
                </animations:Implicit.HideAnimations>
                <TextBlock
                    x:Name="StatusMessageText"
                    FontSize="20"
                    FontWeight="SemiBold"
                    Text="{x:Bind ViewModel.StatusMessage, Mode=OneWay}" />
            </Border>

            <muxc:ProgressRing
                x:Name="BufferingIndicator"
                Grid.Row="0"
                Grid.RowSpan="3"
                Width="52"
                Height="52"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                IsActive="True"
                IsHitTestVisible="False"
                Visibility="{x:Bind GetBufferingVisibilityIndicator(ViewModel.State), Mode=OneWay}" />

            <controls:NotificationView
                Grid.Row="1"
                Margin="12,0,12,4"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom" />

            <Grid
                x:Name="PlayerControls"
                Grid.Row="2"
                Padding="12,20,12,12"
                Background="{StaticResource PlayerControlsBackground}"
                XYFocusKeyboardNavigation="Enabled">
                <Grid.RenderTransform>
                    <TranslateTransform x:Name="PlayerControlsTranslate" />
                </Grid.RenderTransform>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <controls:SeekBar
                    x:Name="SeekBar"
                    Grid.Row="0"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    Foreground="Transparent" />

                <StackPanel
                    Grid.Row="1"
                    Grid.Column="0"
                    Orientation="Horizontal">
                    <Button
                        x:Name="PlayPauseButton"
                        Margin="0,0,2,0"
                        Command="{x:Bind ViewModel.PlayPauseCommand}">
                        <Button.KeyboardAccelerators>
                            <KeyboardAccelerator Key="P" />
                            <KeyboardAccelerator Key="K" />
                            <KeyboardAccelerator Key="Space" ScopeOwner="{x:Bind VideoViewButton}" />
                        </Button.KeyboardAccelerators>
                        <SymbolIcon Symbol="{x:Bind GetPlayPauseSymbol(ViewModel.IsPlaying), Mode=OneWay}" />
                    </Button>
                    <controls:VolumeControl
                        x:Name="MuteButton"
                        Height="40"
                        Background="Transparent"
                        BorderThickness="0" />
                    <controls:TimeDisplay
                        MinWidth="0"
                        Margin="8,0,0,0"
                        VerticalAlignment="Center"
                        Length="{x:Bind SeekBar.ViewModel.Length, Mode=OneWay}"
                        Time="{x:Bind SeekBar.ViewModel.Time, Mode=OneWay}" />
                    <TextBlock
                        MinWidth="0"
                        Margin="8,0,0,0"
                        VerticalAlignment="Center"
                        Visibility="{x:Bind SeekBar.ViewModel.Chapters, Mode=OneWay, Converter={StaticResource CommonVisibilityConverter}}">
                        <Run Text="• " />
                        <Run Text="{x:Bind ViewModel.GetChapterName(SeekBar.ViewModel.CurrentChapter.Name), Mode=OneWay}" />
                    </TextBlock>
                </StackPanel>

                <StackPanel
                    Grid.Row="1"
                    Grid.Column="1"
                    HorizontalAlignment="Right"
                    Orientation="Horizontal">
                    <Button
                        x:Name="AudioAndCaptionButton"
                        VerticalAlignment="Stretch"
                        Flyout="{x:Bind controls:AudioTrackSubtitlePicker.GetFlyout()}">
                        <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xED1F;" />
                        <Button.KeyboardAccelerators>
                            <KeyboardAccelerator Key="C" />
                        </Button.KeyboardAccelerators>
                    </Button>

                    <ToggleButton
                        x:Name="FullscreenButton"
                        Command="{x:Bind ViewModel.FullscreenCommand}"
                        CommandParameter="{x:Bind FullscreenButton.IsChecked, Mode=OneWay}"
                        IsChecked="{x:Bind ViewModel.IsFullscreen, Mode=OneWay}">
                        <ToggleButton.KeyboardAccelerators>
                            <KeyboardAccelerator Key="F" />
                        </ToggleButton.KeyboardAccelerators>
                        <SymbolIcon Symbol="{x:Bind GetFullscreenToggleSymbol(ViewModel.IsFullscreen), Mode=OneWay}" />
                    </ToggleButton>

                    <Button
                        x:Name="MoreButton"
                        Margin="2,0,0,0"
                        Flyout="{StaticResource VideoContextMenu}">
                        <SymbolIcon Symbol="More" />
                    </Button>

                    <Button
                        x:Name="ExitCompactOverlayButton"
                        Command="{x:Bind ViewModel.ToggleCompactLayoutCommand}"
                        Visibility="Collapsed">
                        <Button.KeyboardAccelerators>
                            <KeyboardAccelerator Key="Escape" />
                        </Button.KeyboardAccelerators>
                        <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xEE47;" />
                    </Button>
                </StackPanel>
            </Grid>

            <animations:Implicit.ShowAnimations>
                <animations:TranslationAnimation
                    From="{x:Bind GetHeightAsVec3(ViewModel.ViewSize), Mode=OneWay}"
                    To="0"
                    Duration="0:0:0.5" />
            </animations:Implicit.ShowAnimations>

            <animations:Implicit.HideAnimations>
                <animations:TranslationAnimation
                    From="0"
                    To="{x:Bind GetHeightAsVec3(ViewModel.ViewSize), Mode=OneWay}"
                    Duration="0:0:0.5" />
            </animations:Implicit.HideAnimations>

        </Grid>

        <interactivity:Interaction.Behaviors>
            <core:DataTriggerBehavior Binding="{x:Bind ViewModel.ControlsHidden, Mode=OneWay}" Value="True">
                <core:GoToStateAction StateName="Hidden" />
            </core:DataTriggerBehavior>
            <core:DataTriggerBehavior Binding="{x:Bind ViewModel.ControlsHidden, Mode=OneWay}" Value="False">
                <core:GoToStateAction StateName="Normal" />
            </core:DataTriggerBehavior>
            <core:DataTriggerBehavior Binding="{x:Bind ViewModel.IsCompact, Mode=OneWay}" Value="True">
                <core:GoToStateAction StateName="Compact" />
            </core:DataTriggerBehavior>
            <core:DataTriggerBehavior Binding="{x:Bind ViewModel.IsCompact, Mode=OneWay}" Value="False">
                <core:GoToStateAction StateName="Full" />
            </core:DataTriggerBehavior>
            <core:DataTriggerBehavior Binding="{x:Bind ViewModel.PlayerHidden, Mode=OneWay}" Value="True">
                <core:GoToStateAction StateName="PlayerHidden" />
            </core:DataTriggerBehavior>
            <core:DataTriggerBehavior Binding="{x:Bind ViewModel.PlayerHidden, Mode=OneWay}" Value="False">
                <core:GoToStateAction StateName="PlayerVisible" />
            </core:DataTriggerBehavior>
        </interactivity:Interaction.Behaviors>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="PageStates">
                <VisualState x:Name="PlayerVisible" />
                <VisualState x:Name="PlayerHidden">
                    <VisualState.Setters>
                        <Setter Target="InlineFrame.Visibility" Value="Visible" />
                        <Setter Target="LayoutRoot.Visibility" Value="Collapsed" />
                        <Setter Target="TitleBarElement.Margin" Value="0" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="ControlsVisibilityStates">
                <VisualStateGroup.Transitions>
                    <VisualTransition
                        GeneratedDuration="0:0:0.167"
                        From="Hidden"
                        To="Normal">
                        <VisualTransition.GeneratedEasingFunction>
                            <QuadraticEase EasingMode="EaseOut" />
                        </VisualTransition.GeneratedEasingFunction>
                    </VisualTransition>
                    <VisualTransition
                        GeneratedDuration="0:0:0.3"
                        From="Normal"
                        To="Hidden">
                        <VisualTransition.GeneratedEasingFunction>
                            <QuadraticEase EasingMode="EaseIn" />
                        </VisualTransition.GeneratedEasingFunction>
                    </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Hidden">
                    <VisualState.Setters>
                        <Setter Target="Header.Opacity" Value="0" />
                        <Setter Target="BackButton.Opacity" Value="0" />
                        <Setter Target="PlayerControls.Opacity" Value="0" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="LayoutGroup">
                <VisualState x:Name="Full" />
                <VisualState x:Name="Compact">
                    <VisualState.Setters>
                        <Setter Target="BackButton.Visibility" Value="Collapsed" />
                        <Setter Target="TitleBarElement.MinHeight" Value="32" />
                        <Setter Target="TitleBarElement.Margin" Value="0" />
                        <Setter Target="TitleText.FontSize" Value="12" />
                        <Setter Target="TitleText.FontWeight" Value="Normal" />
                        <Setter Target="TitleText.Margin" Value="13,0,0,0" />
                        <Setter Target="MuteButton.Visibility" Value="Collapsed" />
                        <Setter Target="MoreButton.Visibility" Value="Collapsed" />
                        <Setter Target="AudioAndCaptionButton.Visibility" Value="Collapsed" />
                        <Setter Target="FullscreenButton.Visibility" Value="Collapsed" />
                        <Setter Target="ExitCompactOverlayButton.Visibility" Value="Visible" />
                        <Setter Target="SeekBar.(Grid.Row)" Value="2" />
                        <Setter Target="SeekBar.ProgressOnly" Value="True" />
                        <Setter Target="PlayerControls.Padding" Value="4,4,4,0" />
                        <Setter Target="StatusMessageText.FontSize" Value="16" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
